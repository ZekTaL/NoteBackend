{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","Footer","style","color","fontStyle","fontSize","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"kNAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAEZC,EAAQF,EAAKG,UAAY,oBAAsB,gBAErD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QADR,IACiB,6BACf,4BAAQC,QAASL,GAAmBC,KCK7BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,yBAAKJ,UAAU,SACZI,I,gBCPHC,EAAU,0DAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC8E5BK,EAzFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEGlB,MAAK,SAAAmB,GACJT,EAASS,QAEZ,IAEH,IAqCMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAAjC,GAAI,OAAIA,EAAKG,aAExB+B,EAAS,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKV,6BACA,uGAKJ,OACE,6BACE,qCACA,kBAAC,EAAD,CAAc9B,QAASmB,IACvB,6BACE,4BAAQrB,QAAS,kBAAMoB,GAAYD,KAAnC,QAAmDA,EAAU,YAAc,QAE7E,4BACGO,EAAYO,KAAI,SAACvC,EAAMwC,GAAP,OAAa,kBAAC,EAAD,CAAMC,IAAKD,EAAGxC,KAAMA,EAAMC,iBAAkB,kBA3CrD,SAAAgB,GACzB,IAAMjB,EAAOqB,EAAMqB,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KAChC2B,EAAW,2BAAQ5C,GAAR,IAAcG,WAAYH,EAAKG,YAEhD2B,EACUb,EAAI2B,GACXhC,MAAK,SAAAiC,GACJvB,EAASD,EAAMkB,KAAI,SAAAvC,GAAI,OAAIA,EAAKiB,KAAOA,EAAKjB,EAAO6C,SAEpDC,OAAM,SAAAC,GACLnB,EAAgB,SAAD,OAAU5B,EAAKK,QAAf,sCACf2C,YAAW,WAAOpB,EAAgB,QAAQ,KAC1CN,EAASD,EAAMY,QAAO,SAAAU,GAAC,OAAIA,EAAE1B,KAAOA,SA+B4CgC,CAAmBjD,EAAKiB,WAE1G,0BAAMiC,SAlEM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBhD,QAASkB,EACT+B,MAAM,IAAIC,MAAOC,cACjBrD,UAAWsD,KAAKC,SAAW,IAI7B5B,EACUuB,GACPzC,MAAK,SAAAiC,GACJvB,EAASD,EAAMsC,OAAOd,IACtBrB,EAAW,SAsDX,2BAAOoC,MAAOrC,EAASsC,SAlDJ,SAACV,GACxB3B,EAAW2B,EAAMW,OAAOF,UAkDpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC7B,EAAD,Q,MCpFN8B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5f1efd5c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    \r\n    const label = note.important ? 'set NOT important' : 'set important'\r\n  \r\n    return (\r\n      <li className='note'>\r\n        {note.content} <br></br>\r\n        <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n    )\r\n  }\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = 'https://peaceful-mountain-86701.herokuapp.com/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update}","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      //id: notes.length + 1,\n    }\n  \n    noteService\n      .create(noteObject) \n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {      \n        setErrorMessage(`Note '${note.content}' was already removed from server`)\n        setTimeout(() => {setErrorMessage(null)}, 5000)\n        setNotes(notes.filter(n => n.id !== id))    \n      })\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const Footer = () => {  \n    const footerStyle = {    \n      color: 'green',    \n      fontStyle: 'italic',    \n      fontSize: 16  \n    }  \n    \n    return (    \n      <div style={footerStyle}>      \n      <br />      \n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>    \n      </div>  \n    )\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>SHOW {showAll ? 'IMPORTANT' : 'ALL' }</button>\n      </div>      \n      <ul>\n        {notesToShow.map((note, i) => <Note key={i} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />)}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>  \n      <Footer /> \n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}